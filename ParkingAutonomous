package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import org.firstinspires.ftc.teamcode.common.RobotConfig;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.util.ElapsedTime;


@Autonomous(name="Parking", group="LinearOpMode")

public class ParkingAutonomous extends LinearOpMode {

    ElapsedTime runtime = new ElapsedTime();
    RobotConfig robotConfig = new RobotConfig(this);

    DcMotor leftDcMotor;
    DcMotor rightDcMotor;

    double power = 0.5;

    @Override
    public void runOpMode() throws InterruptedException {
        telemetry.addData("status","intialized");
        telemetry.update();
        robotConfig.init();

        robotConfig.leftDrive.setDirection(DcMotorSimple.Direction.FORWARD);
        robotConfig.rightDrive.setDirection(DcMotorSimple.Direction.FORWARD);

        waitForStart();
        runtime.reset();

        robotConfig.leftDrive.setPower(0.15);
        robotConfig.rightDrive.setPower(0.15);
        sleep(2000);


        robotConfig.leftDrive.setDirection(DcMotorSimple.Direction.REVERSE);
        robotConfig.rightDrive.setDirection(DcMotorSimple.Direction.REVERSE);


        robotConfig.leftDrive.setPower(0.15);
        robotConfig.rightDrive.setPower(0.15);
        sleep(2000);

        robotConfig.leftDrive.setDirection(DcMotorSimple.Direction.REVERSE);
        robotConfig.rightDrive.setDirection (DcMotorSimple.Direction.FORWARD);


        robotConfig.leftDrive.setPower(0.15);
        robotConfig.rightDrive.setPower(0.15);
        sleep(250);


        robotConfig.leftDrive.setDirection(DcMotorSimple.Direction.FORWARD);
        robotConfig.rightDrive.setDirection(DcMotorSimple.Direction.FORWARD);


        robotConfig.leftDrive.setPower(0.15);
        robotConfig.rightDrive.setPower(0.15);
        sleep(2000);

                }
}
